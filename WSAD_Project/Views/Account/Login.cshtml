
@{
    ViewBag.Title = "Login";
}

<p id="page_title">
    Login
</p>

@if (TempData["LoginMessage"] != null && TempData["LoginMessage"].ToString() != string.Empty)
{
    <div class="alert alert-warning">
        <span class="glyphicon glyphicon-remove-circle"></span>
        @TempData["LoginMessage"]
    </div>
}

@if (TempData["LogoutMessage"] != null && TempData["LogoutMessage"].ToString() != string.Empty)
{
    <div class="alert alert-warning">
        <span class="glyphicon glyphicon-remove-circle"></span>
        @TempData["LogoutMessage"]
    </div>
}



@using (Html.BeginForm("Login", "Account", new { ReturnUrl = Request.QueryString["ReturnUrl"] }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <p>
        @Html.TextBox("username", null, new { placeholder = "Enter User Name", @class = "form-control" })
    </p>

    <p>
        @Html.Password("password", null, new { placeholder = "Enter Password", @class = "form-control" })
    </p>

    <p>
        <button type="submit" name="login" class="btn btn-success">Sign In</button>
        @(Html.ActionLink("Create an Account", "Create", "Account", null, null))
    </p>
}


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script runat="server">
        string[] rolesArray;
        MembershipUserCollection users;

        public void Page_Load()
        {
          Msg.Text = "";

          try
          {
            if (!Roles.IsUserInRole(User.Identity.Name, "Admin"))
            {
              Msg.Text = "You are not an authorized user.";
              UsersListBox.Visible = false;
              return;
            }
          }
          catch (HttpException e)
          {
            Msg.Text = "Please log in.";
            return;
          }


          if (!IsPostBack)
          {
            // Bind users to ListBox.

            users = Membership.GetAllUsers();
            UsersListBox.DataSource = users;
            UsersListBox.DataBind();
          }


          // If a user is selected, show the roles for the selected user.

          if (UsersListBox.SelectedItem != null)
          {
            // Bind roles to GridView.

            rolesArray = Roles.GetRolesForUser(UsersListBox.SelectedItem.Value);
            UserRolesGrid.DataSource = rolesArray;
            UserRolesGrid.DataBind();

            UserRolesGrid.Columns[0].HeaderText = "Roles for " + UsersListBox.SelectedItem.Value;
          }
        }
    </script>

}
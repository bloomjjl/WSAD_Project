@model WSAD_Project.Areas.Admin.Models.ViewModels.ManageSession.EditManageSessionViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Session Profile</h2>


@using (Html.BeginForm("Edit", "ManageSessions"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Occupancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Occupancy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Occupancy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Presenters, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    @{

                        for (int i = 0; i < Model.Presenters.Count(); i++)
                        {
                            var presenter = Model.Presenters[i];
                            <tr>
                                <td id="presenter_@Model.Presenters[i].Id">@presenter.FirstName @presenter.LastName</td>
                           </tr>
                        }
                        <tr>
                            <td>
                                @Html.ActionLink("Update Presenters","PresenterListbySession", new { sessionId = Model.Id })
                            </td>
                            <td>&nbsp;</td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        function remove(presenterId) {
            console.log('showPresenter' + presenterId);
            document.getElementById('presenter_strike_' + presenterId).style.visibility = 'hidden';
            document.getElementById('removePresenter_' + presenterId).style.display = 'none';
            document.getElementById('showPresenter_' + presenterId).style.display = 'none';
        }
        
        function add(presenterId) {
            hide(document.getElementById('removePresenter' + presenterId));
            show(document.getElementById('showPresenter' + presenterId));
            hide(document.getElementById('removePresenter'));
            show(document.getElementById('showPresenter'));
        }
        //<strike>not yet available!</strike>
    </script>
}
